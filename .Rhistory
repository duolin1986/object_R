source('H:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('H:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('H:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
install.packages('tidyverse')
library(readr)
chip2name <- read_delim("H:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/ChipIDSampleID.txt",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(chip2name)
library(readr)
InG_vs_WT_infilter <- read_delim("H:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/InG_vs_WT_infilter.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(InG_vs_WT_infilter)
f_name_data <- chip2name
f_unname_data <- InG_vs_WT_infilter
for (i in 1:dim(f_name_data)[1]) {
}
loc <- grep("Signal", colnames(f_unname_data))
colnames(f_unname_data)[loc] <- gsub("\\_.*", "_signal", colnames(f_unname_data)[loc])
f_unname_data[f_unname_data$`Fold Change`>=0,'UP&DOWN']<-'UP'
f_unname_data[f_unname_data$`Fold Change`<0,'UP&DOWN']<-'DOWN'
View(f_unname_data)
loc <- grep("Signal", colnames(f_unname_data))
loc
loc <- grep("signal", colnames(f_unname_data))
loc
colnames(f_unname_data)[loc] <- gsub("\\_.*", "_signal", colnames(f_unname_data)[loc])
View(f_unname_data)
dim(f_name_data)
library('tidyverse')
?str_replace
str_replace(string = c('abc','abced'),pattern = 'abc',replacement = '1')
str_replace(string = c('abc','abced'),pattern = 'abc',replacement = c('1','2'))
str_replace(string = c('abc','abced'),pattern = 'abc',replacement = c('1','2','3'))
str_replace(string = c('abc','abced'),pattern = 'abc',replacement = c('1','2'))
str_replace(string = c('abc','abced'),pattern = 'abc',replacement = c('1'))
str_replace(string = c('abc','abced'),pattern = c('abc','bc'),replacement = c('1'))
str_replace(string = c('abc','abced'),pattern = c('abc','bc'),replacement = c('1',))
str_replace(string = c('abc','abced'),pattern = c('abc','bc'),replacement = c('1','3'))
str_replace(string = c('abc','abced'),pattern = c('abc','bc','a'),replacement = c('1','3'))
colnames(f_unname_data)
colnames(f_name_data)
colnames(f_name_data) <- c('Chip_ID','Sample_Name','Group_Name')
colnames(f_name_data)
View(f_name_data)
f_name_data[,'Sample_Name']
colnames(f_unname_data)
grep(pattern = '*signal$',x = colnames(f_unname_data))
str_extract(string = colnames(f_unname_data),'*signal$')
str_extract(string = colnames(f_unname_data),'.*signal$')
grep(pattern = '.*signal$',x = colnames(f_unname_data))
str_match(colnames(f_unname_data),'.*signal$')
class(str_match(colnames(f_unname_data),'.*signal$'))
class(str_extract(string = colnames(f_unname_data),'.*signal$'))
a <- colnames(f_unname_data)
a
str_locate(a,'.*signal$')
a
a <- c(a,'asdl')
a
str_extract(a,'.*signal$')
grep('.*signal$',a)
a[17]
a[17] <- 'signal'
grep('.*signal$',a)
a[17] <- 'ignal'
grep('.*signal$',a)
grep('.*signal.$',a)
grep('.*.$',a)
grep('.*signal$',a)
a <- a[-17]
a
str_extract(a,'.*signal$')
str_extract(a,'.*signal$')->b
a
a[b]
b
a
class(a)
class(b)
grep(pattern = '.*signal$','a')
grep(pattern = '.*signal$',a)
grep(pattern = '.*signal$',a)->b
b
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = '.*ignal$',replacement = f_name_data[,'Sample_Name'])
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = '.*ignal$',replacement = f_name_data$Sample_Name)
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = f_name_data$Chip_ID,replacement = f_name_data$Sample_Name)
library('tidyverse')
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = f_name_data$Chip_ID,replacement = f_name_data$Sample_Name)
a <- InG_vs_WT_infilter
colnames(InG_vs_WT_infilter) <- str_replace(string = colnames(InG_vs_WT_infilter),pattern = f_name_data$Chip_ID,replacement = f_name_data$Sample_Name)
View(InG_vs_WT_infilter)
str_extract(string = colnames(InG_vs_WT_infilter),pattern = f_name_data$Chip_ID)
f_name_data$Chip_ID
colnames(InG_vs_WT_infilter)
str_extract(string = colnames(InG_vs_WT_infilter),pattern = f_name_data$Chip_ID)
str_extract(string = colnames(InG_vs_WT_infilter),pattern = 'ingnal')
str_extract(string = colnames(InG_vs_WT_infilter),pattern = 'ignal')
str_extract(string = colnames(InG_vs_WT_infilter),pattern = '.*ignal')
f_name_data$Chip_ID
paste0(f_name_data$Chip_ID,'.*')
paste0('^',f_name_data$Chip_ID,'.*')
paste0('^',f_name_data$Chip_ID,'.*')->b
b
colnames(InG_vs_WT_infilter) <- str_replace(string = colnames(InG_vs_WT_infilter),pattern = b,replacement = f_name_data$Sample_Name)
View(InG_vs_WT_infilter)
b
?str_sub
hw <- "Hadley Wickham"
str_sub(hw, 1, 6)
colnames(InG_vs_WT_infilter) <- str_replace(string = colnames(InG_vs_WT_infilter),pattern = b[1],replacement = f_name_data$Sample_Name)
View(InG_vs_WT_infilter)
head(a)
InG_vs_WT_infilter <- a
name <- str_extract(colname(InG_vs_WT_infilter),pattern = f_name_data$Chip_ID)
name <- str_extract(colnames(InG_vs_WT_infilter),pattern = f_name_data$Chip_ID)
name
name <- str_extract(colnames(InG_vs_WT_infilter),pattern = paste0(f_name_data$Chip_ID,'.*'))
name
f_name_data$Chip_ID
paste0(f_name_data$Chip_ID,'.*')
str_extract()
?str_extract
name <- str_match(colnames(InG_vs_WT_infilter),pattern = paste0(f_name_data$Chip_ID,'.*'))
name
name <- str_extract(colnames(InG_vs_WT_infilter),pattern = paste0(f_name_data$Chip_ID[1],'.*'))
name
name <- na.omit(name)
name
class(name)
attr(x = name)
colname <- colnames(InG_vs_WT_infilter)
colname
b
sapply(b,str_extract(string = colname,pattern = x))
sapply(b,str_extract(string = colname,pattern = ))
sapply(b,str_extract(string = colname))
sapply(b,str_extract(string = colname,pattern = b))
sapply(b,'str_extract')
r <- c(NA,'c')
r[r]
r[,r]
r
source('~/.active-rstudio-document')
sapply(b,'str_extract_wrapper')
sapply(b,'str_extract_wrapper')->g
class(g)
apply(b,'str_extract_wrapper')->g
apply(b,str_extract_wrapper)->g
?sapply
vapply(b,str_extract_wrapper)->g
vapply(b,'str_extract_wrapper')->g
lapply(b,'str_extract_wrapper')->g
class(g)
g
?sub
for(i in 10){print(i)}
nrow(f_name_data)
f_unname_data <- InG_vs_WT_infilter
for(i in 1:nrow(f_name_data)){
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = paste0('^',f_name_data[i,'Chip_ID'],'.*ignal$'),replacement = f_name_data[i,'Sample_ID'])
}
colnames(f_name_data)
colnames(f_name_data)[2]
colnames(f_name_data)[2] <- 'Sample_ID'
for(i in 1:nrow(f_name_data)){
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = paste0('^',f_name_data[i,'Chip_ID'],'.*ignal$'),replacement = f_name_data[i,'Sample_ID'])
}
class(f_name_data[1,2])
class(f_name_data$Sample_ID)
for(i in 1:nrow(f_name_data)){
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = paste0('^',f_name_data$Chip_ID[i],'.*ignal$'),replacement = f_name_data$Sample_ID[i])
}
f_unname_data <- a
View(f_unname_data)
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = paste0('^',f_name_data$Chip_ID[i],'.*ignal$'),replacement = paste0(f_name_data$Sample_ID,'_signal'))
for(i in 1:nrow(f_name_data)){
colnames(f_unname_data) <- str_replace(string = colnames(f_unname_data),pattern = paste0('^',f_name_data$Chip_ID[i],'.*ignal$'),replacement = paste0(f_name_data$Sample_ID,'_signal'))
}
character(1)
character(2)
character('a')
character(1)
character(4)
class(character(3))
character(0)
character(-1)
character(2)
alpha(1)
alpha(2)
alpha('a')
alpha(4)
FC_new1 <- rbind(f_unname_data,rep(0,length(f_unname_data)))
dim(FC_new1)
dim(f_unname_data)
View(f_new1)
View(FC_new1)
log2(0)
log2(1)
log2(f_unname_data$`Fold Change`)
for(j in length(f_unname_data$`Fold Change`)){
if(f_unname_data$`Fold Change`[j]>=0){
f_unname_data[f_unname_data$`Fold Change`[j],'log2(Fold Change)'] <- log2(f_unname_data$`Fold Change`[j])
}
View(f_unname_data)
for(j in 1:length(f_unname_data$`Fold Change`)){
if(f_unname_data$`Fold Change`[j]>=0){
f_unname_data[f_unname_data$`Fold Change`[j],'log2(Fold Change)'] <- log2(f_unname_data$`Fold Change`[j])
}
for(j in 1:length(f_unname_data$`Fold Change`)){
if(f_unname_data$`Fold Change`[j]>=0){
f_unname_data[f_unname_data$`Fold Change`[j],'log2(Fold Change)'] <- log2(f_unname_data$`Fold Change`[j])
}
else if(f_unname_data$`Fold Change`[j]<0){
f_unname_data[f_unname_data$`Fold Change`[j],'log2(Fold Change)'] <- log2(-1/f_unname_data$`Fold Change`[j])
}
assertthat::has_attr(x = f_unname_data,which = 'Fold Change')
assertthat::has_attr(x = f_unname_data,which = Fold Change)
？assertthat::has_attr
?assertthat::has_attr
has_attr(has_attr, "fail")
x <- 10
x %has_attr% "a"
y <- list(a = 1, b = 2)
see_if(y %has_name% "c")
assertthat::has_name(f_unname_data,'Fold Change')
assertthat::has_name(f_unname_data,'Fold Change1')
assertthat::has_attr(f_unname_data,'Fold Change')
assertthat::has_name(f_unname_data,'Fold Change')
stopifnot(assertthat::has_name(f_unname_data,'Fold Change'))
stopifnot(assertthat::has_name(f_unname_data,'Fold Change1'))
stopifnot(assertthat::has_name(f_unname_data,'Fold Change'),exprs = 'wangduolin')
?stopifnot
stopifnot(assertthat::has_name(f_unname_data,'Fold Change'),exprs = print('wangduolin'))
stopifnot(assertthat::has_name(f_unname_data,'Fold Change'),exprs = 1>2)
class(f_unname_data[[1],])
class(f_unname_data[,[1]])
class(f_unname_data[,1])
class(f_unname_data[,[1]])
rm(y)
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
rm(FC_new1)
rm(g)
rm(a)
rm(hw)
rm(i)
rm(j)
rm(r)
rm(x)
rm(loc)
rm(name)
rm(b)
rm(co.intervals())
rm(colname)
rm(str_extract_wrapper())
rm(str_extract_wrapper)
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
View(f_unname_data)
View(InG_vs_WT_infilter)
test <- God$new(f_unname_data = InG_vs_WT_infilter,f_name_data = f_name_data,c_species = 'human')
View(test$f_handled_data)
View(data)
data1 <- test$f_handled_data
aa <- grep(x=colnames(data1),pattern = '.*signal$',value = T)
aa
?cbind
bb <- cbind(name=(data1[,i]),value=i)
bb <- cbind(name=(data1[,aa[1]]),value=aa[1])
View(bb)
class(data1[,aa[1]])
View(bb)
bb <- cbind(value=(data1[,i]),name=i)
bb <- cbind(value=(data1[,aa[1]]),name=aa[1])
View(bb)
bb <- cbind((data1[,aa[1]]),name=aa[1])
View(bb)
View(data1[,aa[1]])
bb <- cbind(value=data1$InG_2_signal,name=aa[1])
View(bb)
View(bb)
bb <- cbind(value=as.character(data1[,aa[1]]),name=aa[1])
rm(bb)
data1[,1]
data1[[1]]
data1[,[1]]
data1[[,1]]
data1[[,aa[1]]]
View(data1[[1]])
class(data1[[1]])
View(data1[[aa[1]]])
bb <- cbind(value=data1[[aa[1]]],name=aa[1])
View(bb)
rm(bb)
aa
for (i in aa){
cc <- NULL
bb <- cbind(value=(data1[[i]]),name=i)
cc <- rbind(bb,cc)
}
89398/44699
rm(cc)
rm(bb)
cc <- NULL
for (i in aa){
bb <- cbind(value=(data1[[i]]),name=i)
cc <- rbind(bb,cc)
}
536388/44699
View(cc)
268194/44699
ggplot(data = cc,aes(x = name,y=value))+geom_boxplot()
class(cc)
cc <- as.data.frame(cc)
ggplot(data = cc,aes(x = name,y=value,color=name))+geom_boxplot()
rm(bb)
ggplot(data = cc,aes(x = name,y=value,color=name))+geom_boxplot()
boxplot.matrix(cc)
aa
a <- test$f_handled_data[,aa]
View(a)
boxplot(a)
class(cc$name)
ggplot(data = a,aes(x='InG_2',y=InG_2_signal))+geom_boxplot()
ggplot(data = a,aes(x='InG_2',y=InG_2_signal))+geom_boxplot()+geom_boxplot(aes(x='WT_3',y=WT_3_signal))
ggplot(data = a,aes(x='InG_2',y=InG_2_signal))+geom_boxplot()+geom_boxplot(aes(x='WT_3',y=WT_3_signal))+geom_boxplot(aes(x='V1_3',y=V1_3_signal))
ggplot(data = a,aes(x='InG_2',y=InG_2_signal),color='InG_2')+geom_boxplot()
ggplot(data = a,aes(x='InG_2',y=InG_2_signal,color='InG_2'))+geom_boxplot()+geom_boxplot(aes(x='WT_3',y=WT_3_signalm,color='WT_3'))+geom_boxplot(aes(x='V1_3',y=V1_3_signal))
ggplot(data = a,aes(x='InG_2',y=InG_2_signal,color='InG_2'))+geom_boxplot()+geom_boxplot(aes(x='WT_3',y=WT_3_signal,color='WT_3'))+geom_boxplot(aes(x='V1_3',y=V1_3_signal))
ggplot(data = a,aes(x='InG_2',y=InG_2_signal,color=c('InG_2','WT_3'))+geom_boxplot()+geom_boxplot(aes(x='WT_3',y=WT_3_signal))+geom_boxplot(aes(x='V1_3',y=V1_3_signal))
a
ggplot(data = a,aes(x='InG_2',y=InG_2_signal,color=c('InG_2','WT_3')))+geom_boxplot()+geom_boxplot(aes(x='WT_3',y=WT_3_signal))
ggplot(data = cc,aes(x = name,y=value,color=name))+geom_boxplot()
View(View())
View(cc)
cc$value <- round(x = cc$value,2)
class(cc$value)
cc$value <- as.numeric(cc$value)
class(cc$value)
ggplot(data = cc,aes(x = name,y=value,color=name))+geom_boxplot()
max(cc)
max(cc$value)
View(cc)
?round
rm(cc)
aa
cc <- NULL
for (i in aa){
bb <- cbind(value=(data1[[i]]),name=i)
cc <- rbind(bb,cc)
}
class(cc)
View(c)
View(cc)
cc[1,1]
View(data1)
class(data1[['InG_2_signal']])
rm(cc)
rm(bb)
cc <- NULL
for (i in aa){
bb <- data_frame(value=(data1[[i]]),name=i)
cc <- rbind(bb,cc)
}
class(cc)
View(cc)
class(cc$value)
class(cc$name)
ggplot(data = cc,aes(x = name,y=value,color=name))+geom_boxplot()
ggplot(data = cc,aes(x = str_replace(name,'_signal',''),y=value,color=name))+geom_boxplot()
cc$name <- str_replace(cc$name,'_signal','')
View(cc$name)
View(cc)
cc$name <- str_replace(cc$name,'_signal','')
all(1==2$2==2)
all(1==2,2==2)
View(f_unname_data)
View(InG_vs_WT_infilter)
aa
cc <- NULL
for (i in aa){
bb <- data_frame(value=(data1[[i]]),name=i,group=c('a','b'))
cc <- rbind(bb,cc)
}
bb <- data_frame(value=(data1[[i]]),name=i,group=c('a'))
cc <- NULL
for (i in aa){
bb <- data_frame(value=(data1[[i]]),name=i,group=c('a'))
cc <- rbind(bb,cc)
}
cc$value <- round(cc$value,2)
cc$name <- str_replace(cc$name,'_signal','')
#ggplot的接口只接受data.frame所以，输入前不妨检查下接口的数据类型
stopifnot(all(is.data.frame(cc),is.numeric(cc$value),is.character(cc$name)))
View(cc)
ggplot(data = cc,aes(x = name,y = value,color=group))+geom_boxplot()
ggplot(data = cc,aes(x = name,y = value,color=group))+geom_boxplot()+theme_light()
aa
aa <- str_replace(string = aa,'_signal','')
aa
ggplot(data = cc,aes(x = name,y = value,color=c('a','b'))+geom_boxplot()+theme_light()
a
a
ggplot(data = cc,aes(x = name,y = value,color=c('a','b')))+geom_boxplot()+theme_light()
ggsave('box_plot.svg',path = pathofdownload)
pathofdownload='a'
all(is.na(pathofdownload),is.null(pathofdownload)
_
all(is.na(pathofdownload),is.null(pathofdownload))
any(is.na(pathofdownload),is.null(pathofdownload))
if(!any(is.na(pathofdownload),is.null(pathofdownload))){print('wangduolin')}
pathofdownload=NA
if(!any(is.na(pathofdownload),is.null(pathofdownload))){print('wangduolin')}
pathofdownload=NULL
if(!any(is.na(pathofdownload),is.null(pathofdownload))){print('wangduolin')}
is.character(NA)
is.character(NULL)
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
source('D:/practise_folder/Gene_2.0_Code_and_instruction/R_S3_S4_zongjie/edit_object_R_code/edit_R_object.R', encoding = 'UTF-8')
