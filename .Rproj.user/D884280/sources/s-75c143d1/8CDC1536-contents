#I decide to build a class called God and put all 
#behavior that we needed into class God
library('R6')
God <- R6Class(classname = "God",
               public = list(
                 f_handled_data=NULL,
                 f_filtered_data=NULL,
                 c_species=NULL,
                 c_extractGene=NULL,
                 initialize = function(f_unname_data,f_name_data,c_species) {
                   #先改下名称，然后再增加个‘UPDOWN列’
                   for (i in 1:dim(f_name_data)[1]) {
                     }
                   loc <- grep("Signal", colnames(f_unname_data))
                   colnames(f_unname_data)[loc] <- gsub("\\_.*", "_signal", colnames(f_unname_data)[loc])
                   f_unname_data[f_unname_data$`Fold Change`>=0,'UP&DOWN']<-'UP'
                   f_unname_data[f_unname_data$`Fold Change`<0,'UP&DOWN']<-'DOWN'
                  FC_new1 <- rbind(f_unname_data,rep(0,length(f_unname_data)))
                   #for(i in 1:nrow(FC_new1)){
                   #  if (FC_new1[i,1]>0){
                  #     FC_new1[i,2] <- FC_new1[i,1]
                   #  }
                   #  else if (FC_new1[i,1]<0){
                  #     FC_new1[i,2] <-(-1/FC_new1[i,1])
                   #  }
                  # }
                 #  FC_new1 <-FC_new1[,2]
                 #  log_FC_new1 <- log2(FC_new1)
                 #  #f_unname_data被重新赋值；
                 #  f_unname_data <- cbind(f_unname_data,'log2(Fold Change'=log_FC_new1)
                   #以上完成了必要的处理；
                  # self$f_handled_data <- f_unname_data
                  # self$c_species <- c_species
                 },
                 #我们得先创建文件夹，这样比较合乎逻辑
                 create_report_dir=function(){
                   #暂时留空，方便后续添加代码
                   
                 },
                 create_zhenzhongtuijian_report_dir=function(nameofreport='TEST',pathofmkdir='.',comp_name='test_compare_name'){
                   current_path <- getwd()#不应变换工作目录
                   setwd(pathofmkdir)#两个作用：1，检查路径是否存在（如若不存在，则会直接报错） 2，setwd本身的作用
                   dir.create(paste(pathofmkdir,nameofreport,sep='/'), showWarnings = FALSE)
                   main_path <- paste(pathofmkdir, nameofreport, sep="/")
                   dir.create(paste(main_path,"1_原始数据分析实验相关内容部分","1_样本信息",sep='/'), recursive = T,showWarnings=FALSE)
                   dir.create(paste(main_path,"1_原始数据分析实验相关内容部分","2_芯片质控",sep='/'), recursive = T,showWarnings=FALSE)
                   dir.create(paste(main_path,"1_原始数据分析实验相关内容部分","3_实验数据",sep='/'), recursive = T,showWarnings=FALSE)
                   dir.create(paste(main_path,"2_探索性分析","1_箱线图",sep='/'), recursive = T,showWarnings=FALSE)
                   dir.create(paste(main_path,"2_探索性分析","2_Peason相关系数图",sep='/'), recursive = T,showWarnings=FALSE)
                   dir.create(paste(main_path,"2_探索性分析","3_PCA图",sep='/'), recursive = T,showWarnings=FALSE)
                   dir.create(paste(main_path,"3_mRNA分析",sep='/'), showWarnings = FALSE)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,sep='/'),showWarnings=FALSE)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"1_差异基因",sep='/'),showWarnings=FALSE)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"2_GO分析",'GO_Barplot',sep='/'),showWarnings=FALSE,recursive=T)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"2_GO分析",'GO_Enrishment',sep='/'),showWarnings=FALSE,recursive = T)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"2_GO分析",'GO_Result',sep='/'),showWarnings=FALSE,recursive = T)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"3_Pathway分析","KEGG_Result",sep='/'),showWarnings=FALSE,recursive = T)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"3_Pathway分析","KEGG_Barplot & Dotplot",sep='/'),showWarnings=FALSE,recursive = T)
                   dir.create(paste(main_path,'3_mRNA分析',comp_name,"3_Pathway分析","Pathway",sep='/'),showWarnings=FALSE,recursive = T)
                   dir.create(paste(main_path,"4_注释信息及说明文档",sep='/'), showWarnings = FALSE)
                   setwd(current_path)#转回原来的工作目录
                   var_mkdir<<-list(#将var_mkdir声明成为全局变量，这样不至于函数中止后，变量不能用
                     exploratory_BoxWhisker_path=paste(main_path,"2_探索性分析","1_箱线图",sep='/'),
                     exploratory_PCA_path=   paste(main_path,"2_探索性分析","3_PCA图",sep='/'),
                     GO_Barplot_path=      paste(main_path,'3_mRNA分析',comp_name,"2_GO分析",'GO_Barplot',sep='/'),
                     GO_Enrishment_path=   paste(main_path,'3_mRNA分析',comp_name,"2_GO分析",'GO_Enrishment',sep='/'),
                     GO_result_path=     paste(main_path,'3_mRNA分析',comp_name,"2_GO分析",'GO_Result',sep='/'),
                     KEGG_Result_path=     paste(main_path,'3_mRNA分析',comp_name,"3_Pathway分析","KEGG Result",sep='/'),
                     KEGG_Barplot_path=    paste(main_path,'3_mRNA分析',comp_name,"3_Pathway分析","KEGG Barplot & Dotplot",sep='/'),
                     KEGG_pathway_path=    paste(main_path,'3_mRNA分析',comp_name,"3_Pathway分析","Pathway",sep='/'),
                     diff_gene_path=     paste(main_path,'3_mRNA分析',comp_name,"1_差异基因",sep='/')
                   )
                 },
                 #箱线图画图方法
                 box_plot=function(data=self$f_handled_data,pathofdownload='.'){
                   
                 },
                 #主成分分析画图方法
                 prcomp_plot=function(data=self$f_handled_data,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 #皮尔森图画图方法
                 pearson_plot=function(data=self$f_handled_data,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 
                 #以上是步骤过滤之前的方法
                 
                 #过滤方法
                 tidy_data=function(data=self$f_handled_data,FC=1,p_value=0.05){# mo ren zhi
                   
                 },
                 
                 #以下是步骤过滤之后的方法
                 cluter_plot=function(data=self$f_filtered_data,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                   unigene <- unique(data[which(data[,"Gene Symbol"]!= "NA" & data[,"Gene Symbol"]!= ""),"Gene Symbol"])
                 },
                 volcano_plot=function(data=self$f_filtered_data,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 
                 
                 #因为本质上做GO和KEGG的数据源都是基因或探针ID，因此，以下方法的输入接口宜做 
                 #改变成字符串向量。
                 
                 #从f_filtered_data中提取基因或探针名称的字符串向量
                 extract_Gene_fun=function(data=f_filtered_data,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 enrich_GO_fun=function(data=c_extractGene,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 
                 #以下方法都是做完GO分析之后的方法，所以，一般情况在做GO之前此方法不宜调
                 #除非只是做测试。
                 bar_plot_GO=function(data=GOresult,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 plot_GO_graph_fun=function(data=GOresult,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 
                 
                 #富集KEGG
                 #一般富集试验之间宜做geneID和Gene Symbol之间的转换，本人特意留住此方法。
                 biter_fun=function(data=c_extractGene,pathofdownload='.'){
                   library('pathview')
                   library('DOSE')
                   library('clusterProfiler')
                   biter()
                   
                 },
                 #富集
                 enrich_KEGG_fun=function(data=c_extractGene,pathofdownload='.'){
                   #暂时留空，方便后续添加代码
                 },
                 
                 #以下方法都是在做完KEGG之后宜调用，因此不建议在enrichKEGGfun调用之前做。除非是做测试。
                 bar_plot_KEGG=function(data=NULL){
                   
                 },
                 dot_plot_KEGG=function(data=NULL){
                   #暂时留空，方便后续添加代码
                 },
                 view_KEGG1_fun=function(data=NULL){
                   #暂时留空，方便后续添加代码
                 },
                 get_htmlreport=function(data=NULL){
                   #暂时留空，方便后续添加代码
                 }
               )
)


#以下是继承God类的类
RNA <- R6Class(classname = 'RNA',inherit = God)